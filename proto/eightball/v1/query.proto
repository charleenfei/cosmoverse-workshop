syntax = "proto3";
package eightball.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "eightball/v1/params.proto";
import "eightball/v1/fortunes.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/charleenfei/cosmoverse-workshop/x/eightball/types";

// Query defines the gRPC querier service.
service Query {
  // Queries a Fortune by index.
	rpc Fortune(QueryFortuneRequest) returns (QueryFortuneResponse) {
		option (google.api.http).get = "/charleenfei/cosmoverse-workshop/eightball/v1/fortune/{owner}";
	}

	// Queries a list of Fortunes items.
	rpc Fortunes(QueryFortunesRequest) returns (QueryFortunesResponse) {
		option (google.api.http).get = "/charleenfei/cosmoverse-workshop/eightball/v1/fortunes";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryFortuneRequest {
	  string owner = 1;

}

message QueryFortuneResponse {
	Fortune fortune = 1 [(gogoproto.nullable) = false];
}

message QueryFortunesRequest {
}

message QueryFortunesResponse {
	repeated Fortune fortunes = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
